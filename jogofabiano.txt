<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Caça-Palavras do Universo</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #1a1a3d;
            color: #ffffff;
            margin: 0;
            padding: 20px;
            background-image: url('https://upload.wikimedia.org/wikipedia/commons/2/2c/NGC_4414_%28NASA-med%29.jpg');
            background-size: cover;
        }

        h1 {
            font-size: 36px;
            color: #FFD700;
        }

        #game-container {
            margin-top: 20px;
        }

        .letter-container {
            display: inline-block;
            font-size: 24px;
            width: 30px;
            height: 30px;
            line-height: 30px;
            margin: 1px;
            cursor: pointer;
            background-color: #222;
            color: #fff;
            border-radius: 4px;
        }

        .highlighted {
            background-color: green;
            color: #fff;
            font-weight: bold;
        }

        #explanationBox {
            margin-top: 20px;
            padding: 10px;
            background-color: rgba(0, 0, 0, 0.7);
            border-radius: 5px;
            display: none;
            width: 80%;
            margin-left: 10%;
            color: #FFD700;
            font-size: 18px;
        }

        #passwordHint {
            margin-top: 20px;
            color: #FFD700;
            font-size: 22px;
        }

        #passwordDisplay {
            margin-top: 10px;
            font-size: 22px;
            color: #FFD700;
            font-weight: bold;
        }

        .row {
            display: flex;
            justify-content: center;
        }
    </style>
</head>
<body>

    <h1>Caça-Palavras do Universo</h1>
    <p>Encontre as palavras sobre o universo e ganhe explicações sobre cada uma delas!</p>

    <div id="game-container">
        <div id="letterGrid"></div>

        <div id="explanationBox"></div>
        
        <div id="passwordHint">Senha: <span id="passwordLetters">_ _ _ _ _ _ _ _ _ _ _</span></div>
        <div id="passwordDisplay"></div>
    </div>

    <script>
        const words = {
            "FORMAÇÃO": { direction: "vertical", startRow: 0, startCol: 0, description: "A formação de galáxias ocorre a partir de nuvens de gás e poeira.", passwordLetters: ["B", "U"] },
            "GALÁXIAS": { direction: "horizontal", startRow: 0, startCol: 5, description: "Galáxias são grandes sistemas de estrelas, planetas, e gás no universo.", passwordLetters: ["R", "A"] },
            "EXPANSÃO": { direction: "vertical", startRow: 2, startCol: 10, description: "O universo está em expansão contínua desde o Big Bang.", passwordLetters: ["C", "O"] },
            "UNIVERSO": { direction: "horizontal", startRow: 8, startCol: 2, description: "O universo é tudo o que existe: espaço, tempo, matéria e energia.", passwordLetters: ["N", "E"] },
            "RADIAÇÃO": { direction: "vertical", startRow: 5, startCol: 12, description: "A radiação cósmica de fundo é o resíduo do Big Bang.", passwordLetters: ["G", "O"] },
            "CÓSMICA": { direction: "horizontal", startRow: 12, startCol: 4, description: "A radiação cósmica permeia todo o universo.", passwordLetters: ["N", "E"] }
        };

        const gridSize = 15;
        const grid = Array.from({ length: gridSize }, () => Array(gridSize).fill(' '));

        function placeWord(word, startRow, startCol, direction) {
            for (let i = 0; i < word.length; i++) {
                let row = startRow;
                let col = startCol;

                if (direction === "vertical") row += i;
                if (direction === "horizontal") col += i;

                grid[row][col] = word[i];
            }
        }

        // Coloca as palavras no grid
        Object.keys(words).forEach(word => {
            const { startRow, startCol, direction } = words[word];
            placeWord(word, startRow, startCol, direction);
        });

        // Preenche espaços vazios com letras minúsculas aleatórias
        const letters = "abcdefghijklmnopqrstuvwxyz";
        grid.forEach((row, i) => {
            grid[i] = row.map(letter => letter === ' ' ? letters[Math.floor(Math.random() * letters.length)] : letter);
        });

        function displayGrid() {
            const gridContainer = document.getElementById('letterGrid');
            gridContainer.innerHTML = "";

            grid.forEach((row, rowIndex) => {
                const rowElement = document.createElement('div');
                rowElement.classList.add('row');

                row.forEach((letter, colIndex) => {
                    const letterElement = document.createElement('span');
                    letterElement.innerText = letter;
                    letterElement.classList.add('letter-container');
                    letterElement.dataset.row = rowIndex;
                    letterElement.dataset.col = colIndex;

                    letterElement.onclick = () => handleLetterClick(letterElement, letter);

                    rowElement.appendChild(letterElement);
                });

                gridContainer.appendChild(rowElement);
            });
        }

        let selectedLetters = [];
        let correctWords = [];
        let discoveredPasswordLetters = "_ _ _ _ _ _ _ _ _ _ _".split(" ");

        function handleLetterClick(element, letter) {
            const row = parseInt(element.dataset.row);
            const col = parseInt(element.dataset.col);
            const correctLetter = letter.toUpperCase();

            // Marca a letra como parte da palavra correta
            if (letter === correctLetter) {
                element.classList.add('highlighted');
                selectedLetters.push({ letter, row, col });

                checkWordCompletion();
            }
        }

        function checkWordCompletion() {
            Object.keys(words).forEach(word => {
                const { startRow, startCol, direction } = words[word];
                let isComplete = true;

                for (let i = 0; i < word.length; i++) {
                    let row = startRow;
                    let col = startCol;

                    if (direction === "vertical") row += i;
                    if (direction === "horizontal") col += i;

                    if (!selectedLetters.find(l => l.row === row && l.col === col && l.letter === word[i])) {
                        isComplete = false;
                        break;
                    }
                }

                if (isComplete && !correctWords.includes(word)) {
                    correctWords.push(word);
                    showExplanation(word);
                    updatePassword(word);
                }
            });
        }

        function showExplanation(word) {
            const explanationBox = document.getElementById('explanationBox');
            explanationBox.innerText = words[word].description;
            explanationBox.style.display = 'block';
        }

        function updatePassword(word) {
            words[word].passwordLetters.forEach(letter => {
                const index = "BURACO NEGRO".indexOf(letter);
                if (index >= 0 && discoveredPasswordLetters[index] === "_") {
                    discoveredPasswordLetters[index] = letter;
                }
            });
            document.getElementById('passwordLetters').innerText = discoveredPasswordLetters.join(" ");
            document.getElementById('passwordDisplay').innerText = `Senha formada: ${discoveredPasswordLetters.join("")}`;

            if (correctWords.length === Object.keys(words).length) {
                document.getElementById('passwordDisplay').innerText = "Parabéns! Você completou todas as palavras e descobriu a senha!";
            }
        }

        window.onload = () => {
            displayGrid();
        };
    </script>

</body>
</html>